plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'com.palantir.docker' version '0.25.0'
}

group = 'com.zeeroiq.cloudconfig'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.SR8")
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-config-server'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    compileOnly 'org.projectlombok:lombok'
    implementation 'net.logstash.logback:logstash-logback-encoder:6.3'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

// configuration of docker task
apply plugin: 'com.palantir.docker'

String dockerHubUsernameProperty = findProperty('dockerHubUsername') ?: 'zeeroiq'
String imageName = "${dockerHubUsernameProperty}/${project.name}:$version"
bootJar {
    layered {
        enabled = true
        includeLayerTools = true
    }
}
docker {
//    name "${project.name}:${project.version}"
    name imageName
    tag project.name, project.version as String
    dockerfile file('src/main/docker/Dockerfile')
    files "build/libs/${bootJar.archiveFileName.get()}"
    buildArgs([JAR_FILE: bootJar.archiveFileName.get()] as Map<String, String>)
    labels(['project':project.name])
    noCache true
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}
